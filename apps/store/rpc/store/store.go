// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: store.proto

package store

import (
	"context"

	"github.com/ac-dcz/lightRW/apps/store/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddGoodsReq       = pb.AddGoodsReq
	AddGoodsResp      = pb.AddGoodsResp
	GoodsStockReq     = pb.GoodsStockReq
	GoodsStockResp    = pb.GoodsStockResp
	RegistryStoreReq  = pb.RegistryStoreReq
	RegistryStoreResp = pb.RegistryStoreResp
	StoreInfo         = pb.StoreInfo
	StoreInfoReq      = pb.StoreInfoReq
	StoreInfoResp     = pb.StoreInfoResp

	Store interface {
		RegistryStore(ctx context.Context, in *RegistryStoreReq, opts ...grpc.CallOption) (*RegistryStoreResp, error)
		GetStoreInfo(ctx context.Context, in *StoreInfoReq, opts ...grpc.CallOption) (*StoreInfoResp, error)
		AddGoods(ctx context.Context, in *AddGoodsReq, opts ...grpc.CallOption) (*AddGoodsResp, error)
		GetGoodsStock(ctx context.Context, in *GoodsStockReq, opts ...grpc.CallOption) (*GoodsStockResp, error)
	}

	defaultStore struct {
		cli zrpc.Client
	}
)

func NewStore(cli zrpc.Client) Store {
	return &defaultStore{
		cli: cli,
	}
}

func (m *defaultStore) RegistryStore(ctx context.Context, in *RegistryStoreReq, opts ...grpc.CallOption) (*RegistryStoreResp, error) {
	client := pb.NewStoreClient(m.cli.Conn())
	return client.RegistryStore(ctx, in, opts...)
}

func (m *defaultStore) GetStoreInfo(ctx context.Context, in *StoreInfoReq, opts ...grpc.CallOption) (*StoreInfoResp, error) {
	client := pb.NewStoreClient(m.cli.Conn())
	return client.GetStoreInfo(ctx, in, opts...)
}

func (m *defaultStore) AddGoods(ctx context.Context, in *AddGoodsReq, opts ...grpc.CallOption) (*AddGoodsResp, error) {
	client := pb.NewStoreClient(m.cli.Conn())
	return client.AddGoods(ctx, in, opts...)
}

func (m *defaultStore) GetGoodsStock(ctx context.Context, in *GoodsStockReq, opts ...grpc.CallOption) (*GoodsStockResp, error) {
	client := pb.NewStoreClient(m.cli.Conn())
	return client.GetGoodsStock(ctx, in, opts...)
}
