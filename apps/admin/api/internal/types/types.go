// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type QueryParams struct {
	Page int `json:"page,optional,default=1"`
	Size int `json:"size,optional,default=10"`
}

type ReplyByKeyReq struct {
	Key string `form:"key" validate:"required"`
	QueryParams
}

type ReplyByMidReq struct {
	Mid uint64 `form:"mid" validate:"required"`
	QueryParams
}

type ReplyByReplyIdReq struct {
	ReplyId uint64 `form:"reply_id" validate:"required"`
	QueryParams
}

type ReplyByReviewIdReq struct {
	ReviewId uint64 `form:"review_id" validate:"required"`
	QueryParams
}

type ReplyBySSkuReq struct {
	StoreId uint64 `form:"store_id" validate:"required"`
	Sku     string `form:"sku" validate:"required"`
	QueryParams
}

type ReplyResp struct {
	Items []map[string]interface{} `json:"items"`
}

type ReviewByKeyReq struct {
	Key string `form:"key" validate:"required"`
	QueryParams
}

type ReviewByReviewIdReq struct {
	ReviewId uint64 `form:"review_id" validate:"required"`
	QueryParams
}

type ReviewBySSkuReq struct {
	StoreId uint64 `form:"store_id" validate:"required"`
	Sku     string `form:"sku" validate:"required"`
	QueryParams
}

type ReviewByUidReq struct {
	Uid uint64 `form:"uid" validate:"required"`
	QueryParams
}

type ReviewResp struct {
	Items []map[string]interface{} `json:"items"`
}

type UpdateReplyReq struct {
	ReplyId  uint64 `json:"review_id" validate:"required"`
	Status   uint8  `json:"status" validate:"required"`
	OpReason string `json:"op_reason,optional"`
}

type UpdateReplyResp struct {
}

type UpdateReviewReq struct {
	ReviewId uint64 `json:"review_id" validate:"required"`
	Status   uint8  `json:"status" validate:"required"`
	OpReason string `json:"op_reason,optional"`
}

type UpdateReviewResp struct {
}
