// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v4.23.1
// source: reply.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplyInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mid           uint64                 `protobuf:"varint,1,opt,name=Mid,proto3" json:"Mid,omitempty"` //商家id
	ReviewId      uint64                 `protobuf:"varint,2,opt,name=ReviewId,proto3" json:"ReviewId,omitempty"`
	StoreId       uint64                 `protobuf:"varint,3,opt,name=StoreId,proto3" json:"StoreId,omitempty"`
	Sku           string                 `protobuf:"bytes,4,opt,name=Sku,proto3" json:"Sku,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
	HasImage      uint32                 `protobuf:"varint,6,opt,name=HasImage,proto3" json:"HasImage,omitempty"`
	ImageCDN      string                 `protobuf:"bytes,7,opt,name=ImageCDN,proto3" json:"ImageCDN,omitempty"`
	ReplyId       uint64                 `protobuf:"varint,8,opt,name=ReplyId,proto3" json:"ReplyId,omitempty"`
	Status        uint32                 `protobuf:"varint,9,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateAt      string                 `protobuf:"bytes,10,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	IsDel         uint32                 `protobuf:"varint,11,opt,name=IsDel,proto3" json:"IsDel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyInfo) Reset() {
	*x = ReplyInfo{}
	mi := &file_reply_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyInfo) ProtoMessage() {}

func (x *ReplyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyInfo.ProtoReflect.Descriptor instead.
func (*ReplyInfo) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{0}
}

func (x *ReplyInfo) GetMid() uint64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ReplyInfo) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

func (x *ReplyInfo) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *ReplyInfo) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *ReplyInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyInfo) GetHasImage() uint32 {
	if x != nil {
		return x.HasImage
	}
	return 0
}

func (x *ReplyInfo) GetImageCDN() string {
	if x != nil {
		return x.ImageCDN
	}
	return ""
}

func (x *ReplyInfo) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *ReplyInfo) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReplyInfo) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *ReplyInfo) GetIsDel() uint32 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

type ProposeReplyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mid           uint64                 `protobuf:"varint,1,opt,name=Mid,proto3" json:"Mid,omitempty"` //商家id
	ReviewId      uint64                 `protobuf:"varint,2,opt,name=ReviewId,proto3" json:"ReviewId,omitempty"`
	StoreId       uint64                 `protobuf:"varint,3,opt,name=StoreId,proto3" json:"StoreId,omitempty"`
	Sku           string                 `protobuf:"bytes,4,opt,name=Sku,proto3" json:"Sku,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
	HasImage      uint32                 `protobuf:"varint,6,opt,name=HasImage,proto3" json:"HasImage,omitempty"`
	ImageCDN      string                 `protobuf:"bytes,7,opt,name=ImageCDN,proto3" json:"ImageCDN,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposeReplyReq) Reset() {
	*x = ProposeReplyReq{}
	mi := &file_reply_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeReplyReq) ProtoMessage() {}

func (x *ProposeReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeReplyReq.ProtoReflect.Descriptor instead.
func (*ProposeReplyReq) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{1}
}

func (x *ProposeReplyReq) GetMid() uint64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ProposeReplyReq) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

func (x *ProposeReplyReq) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *ProposeReplyReq) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *ProposeReplyReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ProposeReplyReq) GetHasImage() uint32 {
	if x != nil {
		return x.HasImage
	}
	return 0
}

func (x *ProposeReplyReq) GetImageCDN() string {
	if x != nil {
		return x.ImageCDN
	}
	return ""
}

type ProposeReplyResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       uint64                 `protobuf:"varint,1,opt,name=ReplyId,proto3" json:"ReplyId,omitempty"`
	Status        uint32                 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposeReplyResp) Reset() {
	*x = ProposeReplyResp{}
	mi := &file_reply_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeReplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeReplyResp) ProtoMessage() {}

func (x *ProposeReplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeReplyResp.ProtoReflect.Descriptor instead.
func (*ProposeReplyResp) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{2}
}

func (x *ProposeReplyResp) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *ProposeReplyResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ReplyBySSkuReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       uint64                 `protobuf:"varint,1,opt,name=StoreId,proto3" json:"StoreId,omitempty"`
	Sku           string                 `protobuf:"bytes,2,opt,name=Sku,proto3" json:"Sku,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyBySSkuReq) Reset() {
	*x = ReplyBySSkuReq{}
	mi := &file_reply_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyBySSkuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyBySSkuReq) ProtoMessage() {}

func (x *ReplyBySSkuReq) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyBySSkuReq.ProtoReflect.Descriptor instead.
func (*ReplyBySSkuReq) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{3}
}

func (x *ReplyBySSkuReq) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *ReplyBySSkuReq) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

type ReplyBySSkuResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Infos         []*ReplyInfo           `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyBySSkuResp) Reset() {
	*x = ReplyBySSkuResp{}
	mi := &file_reply_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyBySSkuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyBySSkuResp) ProtoMessage() {}

func (x *ReplyBySSkuResp) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyBySSkuResp.ProtoReflect.Descriptor instead.
func (*ReplyBySSkuResp) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{4}
}

func (x *ReplyBySSkuResp) GetInfos() []*ReplyInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type ReplyByReviewIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewId      uint64                 `protobuf:"varint,1,opt,name=ReviewId,proto3" json:"ReviewId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyByReviewIdReq) Reset() {
	*x = ReplyByReviewIdReq{}
	mi := &file_reply_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyByReviewIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyByReviewIdReq) ProtoMessage() {}

func (x *ReplyByReviewIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyByReviewIdReq.ProtoReflect.Descriptor instead.
func (*ReplyByReviewIdReq) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{5}
}

func (x *ReplyByReviewIdReq) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

type ReplyByReviewIdResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Infos         []*ReplyInfo           `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyByReviewIdResp) Reset() {
	*x = ReplyByReviewIdResp{}
	mi := &file_reply_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyByReviewIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyByReviewIdResp) ProtoMessage() {}

func (x *ReplyByReviewIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyByReviewIdResp.ProtoReflect.Descriptor instead.
func (*ReplyByReviewIdResp) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{6}
}

func (x *ReplyByReviewIdResp) GetInfos() []*ReplyInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type ReplyByReplyIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       uint64                 `protobuf:"varint,1,opt,name=ReplyId,proto3" json:"ReplyId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyByReplyIdReq) Reset() {
	*x = ReplyByReplyIdReq{}
	mi := &file_reply_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyByReplyIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyByReplyIdReq) ProtoMessage() {}

func (x *ReplyByReplyIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyByReplyIdReq.ProtoReflect.Descriptor instead.
func (*ReplyByReplyIdReq) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{7}
}

func (x *ReplyByReplyIdReq) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

type ReplyByReplyIdResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *ReplyInfo             `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyByReplyIdResp) Reset() {
	*x = ReplyByReplyIdResp{}
	mi := &file_reply_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyByReplyIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyByReplyIdResp) ProtoMessage() {}

func (x *ReplyByReplyIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyByReplyIdResp.ProtoReflect.Descriptor instead.
func (*ReplyByReplyIdResp) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{8}
}

func (x *ReplyByReplyIdResp) GetInfo() *ReplyInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ReplyByMidReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mid           uint64                 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyByMidReq) Reset() {
	*x = ReplyByMidReq{}
	mi := &file_reply_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyByMidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyByMidReq) ProtoMessage() {}

func (x *ReplyByMidReq) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyByMidReq.ProtoReflect.Descriptor instead.
func (*ReplyByMidReq) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{9}
}

func (x *ReplyByMidReq) GetMid() uint64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type ReplyByMidResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Infos         []*ReplyInfo           `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyByMidResp) Reset() {
	*x = ReplyByMidResp{}
	mi := &file_reply_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyByMidResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyByMidResp) ProtoMessage() {}

func (x *ReplyByMidResp) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyByMidResp.ProtoReflect.Descriptor instead.
func (*ReplyByMidResp) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{10}
}

func (x *ReplyByMidResp) GetInfos() []*ReplyInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       uint64                 `protobuf:"varint,1,opt,name=ReplyId,proto3" json:"ReplyId,omitempty"`
	Status        uint32                 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	OpReason      string                 `protobuf:"bytes,3,opt,name=OpReason,proto3" json:"OpReason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStatusReq) Reset() {
	*x = UpdateStatusReq{}
	mi := &file_reply_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusReq) ProtoMessage() {}

func (x *UpdateStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateStatusReq) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateStatusReq) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *UpdateStatusReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateStatusReq) GetOpReason() string {
	if x != nil {
		return x.OpReason
	}
	return ""
}

type UpdateStatusResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       uint64                 `protobuf:"varint,1,opt,name=ReplyId,proto3" json:"ReplyId,omitempty"`
	Status        uint32                 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStatusResp) Reset() {
	*x = UpdateStatusResp{}
	mi := &file_reply_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusResp) ProtoMessage() {}

func (x *UpdateStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateStatusResp) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateStatusResp) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *UpdateStatusResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_reply_proto protoreflect.FileDescriptor

var file_reply_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x9b, 0x02, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x4d, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x6b,
	0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x6b, 0x75, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x61, 0x73, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x48, 0x61, 0x73, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x44, 0x4e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x44, 0x4e, 0x12, 0x18,
	0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x49, 0x73, 0x44, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x49, 0x73, 0x44,
	0x65, 0x6c, 0x22, 0xbd, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x4d, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x53, 0x6b, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x6b, 0x75,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x61,
	0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x48, 0x61,
	0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43,
	0x44, 0x4e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43,
	0x44, 0x4e, 0x22, 0x44, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3c, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x42, 0x79, 0x53, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x53, 0x6b, 0x75, 0x22, 0x39, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42,
	0x79, 0x53, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x30, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0x2d, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49,
	0x64, 0x22, 0x3a, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x21, 0x0a,
	0x0d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x22, 0x38, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x26, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x5f, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x32, 0x93, 0x03, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x18,
	0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x53, 0x53,
	0x6b, 0x75, 0x12, 0x15, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x42, 0x79, 0x53, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x53, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x48, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x42, 0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0a, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x2e, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x4d, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x4d,
	0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_reply_proto_rawDescOnce sync.Once
	file_reply_proto_rawDescData = file_reply_proto_rawDesc
)

func file_reply_proto_rawDescGZIP() []byte {
	file_reply_proto_rawDescOnce.Do(func() {
		file_reply_proto_rawDescData = protoimpl.X.CompressGZIP(file_reply_proto_rawDescData)
	})
	return file_reply_proto_rawDescData
}

var file_reply_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_reply_proto_goTypes = []any{
	(*ReplyInfo)(nil),           // 0: reply.ReplyInfo
	(*ProposeReplyReq)(nil),     // 1: reply.ProposeReplyReq
	(*ProposeReplyResp)(nil),    // 2: reply.ProposeReplyResp
	(*ReplyBySSkuReq)(nil),      // 3: reply.ReplyBySSkuReq
	(*ReplyBySSkuResp)(nil),     // 4: reply.ReplyBySSkuResp
	(*ReplyByReviewIdReq)(nil),  // 5: reply.ReplyByReviewIdReq
	(*ReplyByReviewIdResp)(nil), // 6: reply.ReplyByReviewIdResp
	(*ReplyByReplyIdReq)(nil),   // 7: reply.ReplyByReplyIdReq
	(*ReplyByReplyIdResp)(nil),  // 8: reply.ReplyByReplyIdResp
	(*ReplyByMidReq)(nil),       // 9: reply.ReplyByMidReq
	(*ReplyByMidResp)(nil),      // 10: reply.ReplyByMidResp
	(*UpdateStatusReq)(nil),     // 11: reply.UpdateStatusReq
	(*UpdateStatusResp)(nil),    // 12: reply.UpdateStatusResp
}
var file_reply_proto_depIdxs = []int32{
	0,  // 0: reply.ReplyBySSkuResp.Infos:type_name -> reply.ReplyInfo
	0,  // 1: reply.ReplyByReviewIdResp.Infos:type_name -> reply.ReplyInfo
	0,  // 2: reply.ReplyByReplyIdResp.Info:type_name -> reply.ReplyInfo
	0,  // 3: reply.ReplyByMidResp.Infos:type_name -> reply.ReplyInfo
	1,  // 4: reply.Reply.ProposeReply:input_type -> reply.ProposeReplyReq
	7,  // 5: reply.Reply.ReplyByReplyId:input_type -> reply.ReplyByReplyIdReq
	3,  // 6: reply.Reply.ReplyBySSku:input_type -> reply.ReplyBySSkuReq
	5,  // 7: reply.Reply.ReplyByReviewId:input_type -> reply.ReplyByReviewIdReq
	9,  // 8: reply.Reply.ReplyByMid:input_type -> reply.ReplyByMidReq
	11, // 9: reply.Reply.UpdateStatus:input_type -> reply.UpdateStatusReq
	2,  // 10: reply.Reply.ProposeReply:output_type -> reply.ProposeReplyResp
	8,  // 11: reply.Reply.ReplyByReplyId:output_type -> reply.ReplyByReplyIdResp
	4,  // 12: reply.Reply.ReplyBySSku:output_type -> reply.ReplyBySSkuResp
	6,  // 13: reply.Reply.ReplyByReviewId:output_type -> reply.ReplyByReviewIdResp
	10, // 14: reply.Reply.ReplyByMid:output_type -> reply.ReplyByMidResp
	12, // 15: reply.Reply.UpdateStatus:output_type -> reply.UpdateStatusResp
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_reply_proto_init() }
func file_reply_proto_init() {
	if File_reply_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_reply_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_reply_proto_goTypes,
		DependencyIndexes: file_reply_proto_depIdxs,
		MessageInfos:      file_reply_proto_msgTypes,
	}.Build()
	File_reply_proto = out.File
	file_reply_proto_rawDesc = nil
	file_reply_proto_goTypes = nil
	file_reply_proto_depIdxs = nil
}
