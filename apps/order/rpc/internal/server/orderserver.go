// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: order.proto

package server

import (
	"context"

	"github.com/ac-dcz/lightRW/apps/order/rpc/internal/logic"
	"github.com/ac-dcz/lightRW/apps/order/rpc/internal/svc"
	"github.com/ac-dcz/lightRW/apps/order/rpc/pb"
)

type OrderServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedOrderServer
}

func NewOrderServer(svcCtx *svc.ServiceContext) *OrderServer {
	return &OrderServer{
		svcCtx: svcCtx,
	}
}

func (s *OrderServer) CreateOrder(ctx context.Context, in *pb.CreateOrderReq) (*pb.CreateOrderResp, error) {
	l := logic.NewCreateOrderLogic(ctx, s.svcCtx)
	return l.CreateOrder(in)
}

func (s *OrderServer) PayOrder(ctx context.Context, in *pb.PayOrderReq) (*pb.PayOrderResp, error) {
	l := logic.NewPayOrderLogic(ctx, s.svcCtx)
	return l.PayOrder(in)
}

func (s *OrderServer) OrderInfo(ctx context.Context, in *pb.OrderInfoReq) (*pb.OrderInfoResp, error) {
	l := logic.NewOrderInfoLogic(ctx, s.svcCtx)
	return l.OrderInfo(in)
}

func (s *OrderServer) OrderStatus(ctx context.Context, in *pb.OrderStatusReq) (*pb.OrderStatusResp, error) {
	l := logic.NewOrderStatusLogic(ctx, s.svcCtx)
	return l.OrderStatus(in)
}
