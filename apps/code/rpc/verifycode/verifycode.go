// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: code.proto

package verifycode

import (
	"context"

	"github.com/ac-dcz/lightRW/apps/code/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GenCodeReq     = pb.GenCodeReq
	GenCodeResp    = pb.GenCodeResp
	VerifyCodeReq  = pb.VerifyCodeReq
	VerifyCodeResp = pb.VerifyCodeResp

	VerifyCode interface {
		GenCode(ctx context.Context, in *GenCodeReq, opts ...grpc.CallOption) (*GenCodeResp, error)
		VerifyCode(ctx context.Context, in *VerifyCodeReq, opts ...grpc.CallOption) (*VerifyCodeResp, error)
	}

	defaultVerifyCode struct {
		cli zrpc.Client
	}
)

func NewVerifyCode(cli zrpc.Client) VerifyCode {
	return &defaultVerifyCode{
		cli: cli,
	}
}

func (m *defaultVerifyCode) GenCode(ctx context.Context, in *GenCodeReq, opts ...grpc.CallOption) (*GenCodeResp, error) {
	client := pb.NewVerifyCodeClient(m.cli.Conn())
	return client.GenCode(ctx, in, opts...)
}

func (m *defaultVerifyCode) VerifyCode(ctx context.Context, in *VerifyCodeReq, opts ...grpc.CallOption) (*VerifyCodeResp, error) {
	client := pb.NewVerifyCodeClient(m.cli.Conn())
	return client.VerifyCode(ctx, in, opts...)
}
