// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: review.proto

package server

import (
	"context"

	"github.com/ac-dcz/lightRW/apps/review/rpc/internal/logic"
	"github.com/ac-dcz/lightRW/apps/review/rpc/internal/svc"
	"github.com/ac-dcz/lightRW/apps/review/rpc/pb"
)

type ReviewServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedReviewServer
}

func NewReviewServer(svcCtx *svc.ServiceContext) *ReviewServer {
	return &ReviewServer{
		svcCtx: svcCtx,
	}
}

// 发表评论
func (s *ReviewServer) ProposeReview(ctx context.Context, in *pb.ProposeReviewReq) (*pb.ProposeReviewResp, error) {
	l := logic.NewProposeReviewLogic(ctx, s.svcCtx)
	return l.ProposeReview(in)
}

// 查找某一用户的评论
func (s *ReviewServer) ReviewByUid(ctx context.Context, in *pb.ReviewByUidReq) (*pb.ReviewByUidResp, error) {
	l := logic.NewReviewByUidLogic(ctx, s.svcCtx)
	return l.ReviewByUid(in)
}

// 查找某一款商品的评论
func (s *ReviewServer) ReviewBySSku(ctx context.Context, in *pb.ReviewBySSkuReq) (*pb.ReviewBySSkuResp, error) {
	l := logic.NewReviewBySSkuLogic(ctx, s.svcCtx)
	return l.ReviewBySSku(in)
}

// 查找某一条评论的信息
func (s *ReviewServer) ReviewByReviewId(ctx context.Context, in *pb.ReviewByReviewIdReq) (*pb.ReviewByReviewIdResp, error) {
	l := logic.NewReviewByReviewIdLogic(ctx, s.svcCtx)
	return l.ReviewByReviewId(in)
}
