// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v4.23.1
// source: review.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScoreLevel int32

const (
	ScoreLevel_UnKnow      ScoreLevel = 0
	ScoreLevel_PoorLevel   ScoreLevel = 1
	ScoreLevel_NormalLevel ScoreLevel = 2
	ScoreLevel_GoodLevel   ScoreLevel = 3
)

// Enum value maps for ScoreLevel.
var (
	ScoreLevel_name = map[int32]string{
		0: "UnKnow",
		1: "PoorLevel",
		2: "NormalLevel",
		3: "GoodLevel",
	}
	ScoreLevel_value = map[string]int32{
		"UnKnow":      0,
		"PoorLevel":   1,
		"NormalLevel": 2,
		"GoodLevel":   3,
	}
)

func (x ScoreLevel) Enum() *ScoreLevel {
	p := new(ScoreLevel)
	*p = x
	return p
}

func (x ScoreLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScoreLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_review_proto_enumTypes[0].Descriptor()
}

func (ScoreLevel) Type() protoreflect.EnumType {
	return &file_review_proto_enumTypes[0]
}

func (x ScoreLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScoreLevel.Descriptor instead.
func (ScoreLevel) EnumDescriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{0}
}

type ReviewInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint64                 `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	OrderId       uint64                 `protobuf:"varint,2,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	StoreId       uint64                 `protobuf:"varint,3,opt,name=StoreId,proto3" json:"StoreId,omitempty"`
	Sku           string                 `protobuf:"bytes,4,opt,name=Sku,proto3" json:"Sku,omitempty"`
	Level         ScoreLevel             `protobuf:"varint,5,opt,name=Level,proto3,enum=pb.ScoreLevel" json:"Level,omitempty"`
	GoodsDesc     string                 `protobuf:"bytes,6,opt,name=GoodsDesc,proto3" json:"GoodsDesc,omitempty"`
	HasImage      bool                   `protobuf:"varint,7,opt,name=HasImage,proto3" json:"HasImage,omitempty"`
	ImageCDN      string                 `protobuf:"bytes,8,opt,name=ImageCDN,proto3" json:"ImageCDN,omitempty"`
	StoreScore    uint32                 `protobuf:"varint,9,opt,name=StoreScore,proto3" json:"StoreScore,omitempty"` //店铺评分
	Status        uint64                 `protobuf:"varint,10,opt,name=Status,proto3" json:"Status,omitempty"`
	IsDel         uint32                 `protobuf:"varint,11,opt,name=IsDel,proto3" json:"IsDel,omitempty"`
	CreateAt      string                 `protobuf:"bytes,12,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	ReviewId      uint64                 `protobuf:"varint,13,opt,name=ReviewId,proto3" json:"ReviewId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewInfo) Reset() {
	*x = ReviewInfo{}
	mi := &file_review_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewInfo) ProtoMessage() {}

func (x *ReviewInfo) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewInfo.ProtoReflect.Descriptor instead.
func (*ReviewInfo) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{0}
}

func (x *ReviewInfo) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReviewInfo) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *ReviewInfo) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *ReviewInfo) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *ReviewInfo) GetLevel() ScoreLevel {
	if x != nil {
		return x.Level
	}
	return ScoreLevel_UnKnow
}

func (x *ReviewInfo) GetGoodsDesc() string {
	if x != nil {
		return x.GoodsDesc
	}
	return ""
}

func (x *ReviewInfo) GetHasImage() bool {
	if x != nil {
		return x.HasImage
	}
	return false
}

func (x *ReviewInfo) GetImageCDN() string {
	if x != nil {
		return x.ImageCDN
	}
	return ""
}

func (x *ReviewInfo) GetStoreScore() uint32 {
	if x != nil {
		return x.StoreScore
	}
	return 0
}

func (x *ReviewInfo) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReviewInfo) GetIsDel() uint32 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *ReviewInfo) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *ReviewInfo) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

type ProposeReviewReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint64                 `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	OrderId       uint64                 `protobuf:"varint,2,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	StoreId       uint64                 `protobuf:"varint,3,opt,name=StoreId,proto3" json:"StoreId,omitempty"`
	Sku           string                 `protobuf:"bytes,4,opt,name=Sku,proto3" json:"Sku,omitempty"`
	Level         ScoreLevel             `protobuf:"varint,5,opt,name=Level,proto3,enum=pb.ScoreLevel" json:"Level,omitempty"`
	GoodsDesc     string                 `protobuf:"bytes,6,opt,name=GoodsDesc,proto3" json:"GoodsDesc,omitempty"`
	HasImage      bool                   `protobuf:"varint,7,opt,name=HasImage,proto3" json:"HasImage,omitempty"`
	ImageCDN      string                 `protobuf:"bytes,8,opt,name=ImageCDN,proto3" json:"ImageCDN,omitempty"`
	StoreScore    uint32                 `protobuf:"varint,9,opt,name=StoreScore,proto3" json:"StoreScore,omitempty"` //店铺评分
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposeReviewReq) Reset() {
	*x = ProposeReviewReq{}
	mi := &file_review_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeReviewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeReviewReq) ProtoMessage() {}

func (x *ProposeReviewReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeReviewReq.ProtoReflect.Descriptor instead.
func (*ProposeReviewReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{1}
}

func (x *ProposeReviewReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ProposeReviewReq) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *ProposeReviewReq) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *ProposeReviewReq) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *ProposeReviewReq) GetLevel() ScoreLevel {
	if x != nil {
		return x.Level
	}
	return ScoreLevel_UnKnow
}

func (x *ProposeReviewReq) GetGoodsDesc() string {
	if x != nil {
		return x.GoodsDesc
	}
	return ""
}

func (x *ProposeReviewReq) GetHasImage() bool {
	if x != nil {
		return x.HasImage
	}
	return false
}

func (x *ProposeReviewReq) GetImageCDN() string {
	if x != nil {
		return x.ImageCDN
	}
	return ""
}

func (x *ProposeReviewReq) GetStoreScore() uint32 {
	if x != nil {
		return x.StoreScore
	}
	return 0
}

type ProposeReviewResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewId      uint64                 `protobuf:"varint,1,opt,name=ReviewId,proto3" json:"ReviewId,omitempty"`
	Status        uint32                 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposeReviewResp) Reset() {
	*x = ProposeReviewResp{}
	mi := &file_review_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeReviewResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeReviewResp) ProtoMessage() {}

func (x *ProposeReviewResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeReviewResp.ProtoReflect.Descriptor instead.
func (*ProposeReviewResp) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{2}
}

func (x *ProposeReviewResp) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

func (x *ProposeReviewResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ReviewByUidReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint64                 `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewByUidReq) Reset() {
	*x = ReviewByUidReq{}
	mi := &file_review_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewByUidReq) ProtoMessage() {}

func (x *ReviewByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewByUidReq.ProtoReflect.Descriptor instead.
func (*ReviewByUidReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{3}
}

func (x *ReviewByUidReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ReviewByUidResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Infos         []*ReviewInfo          `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewByUidResp) Reset() {
	*x = ReviewByUidResp{}
	mi := &file_review_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewByUidResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewByUidResp) ProtoMessage() {}

func (x *ReviewByUidResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewByUidResp.ProtoReflect.Descriptor instead.
func (*ReviewByUidResp) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{4}
}

func (x *ReviewByUidResp) GetInfos() []*ReviewInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type ReviewBySSkuReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       uint64                 `protobuf:"varint,1,opt,name=StoreId,proto3" json:"StoreId,omitempty"`
	Sku           string                 `protobuf:"bytes,2,opt,name=Sku,proto3" json:"Sku,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewBySSkuReq) Reset() {
	*x = ReviewBySSkuReq{}
	mi := &file_review_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewBySSkuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewBySSkuReq) ProtoMessage() {}

func (x *ReviewBySSkuReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewBySSkuReq.ProtoReflect.Descriptor instead.
func (*ReviewBySSkuReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{5}
}

func (x *ReviewBySSkuReq) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *ReviewBySSkuReq) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

type ReviewBySSkuResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Infos         []*ReviewInfo          `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewBySSkuResp) Reset() {
	*x = ReviewBySSkuResp{}
	mi := &file_review_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewBySSkuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewBySSkuResp) ProtoMessage() {}

func (x *ReviewBySSkuResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewBySSkuResp.ProtoReflect.Descriptor instead.
func (*ReviewBySSkuResp) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{6}
}

func (x *ReviewBySSkuResp) GetInfos() []*ReviewInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type ReviewByReviewIdReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewId      uint64                 `protobuf:"varint,1,opt,name=ReviewId,proto3" json:"ReviewId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewByReviewIdReq) Reset() {
	*x = ReviewByReviewIdReq{}
	mi := &file_review_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewByReviewIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewByReviewIdReq) ProtoMessage() {}

func (x *ReviewByReviewIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewByReviewIdReq.ProtoReflect.Descriptor instead.
func (*ReviewByReviewIdReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{7}
}

func (x *ReviewByReviewIdReq) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

type ReviewByReviewIdResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *ReviewInfo            `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewByReviewIdResp) Reset() {
	*x = ReviewByReviewIdResp{}
	mi := &file_review_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewByReviewIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewByReviewIdResp) ProtoMessage() {}

func (x *ReviewByReviewIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewByReviewIdResp.ProtoReflect.Descriptor instead.
func (*ReviewByReviewIdResp) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{8}
}

func (x *ReviewByReviewIdResp) GetInfo() *ReviewInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewId      uint64                 `protobuf:"varint,1,opt,name=ReviewId,proto3" json:"ReviewId,omitempty"`
	Status        uint32                 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	OpReason      string                 `protobuf:"bytes,3,opt,name=OpReason,proto3" json:"OpReason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStatusReq) Reset() {
	*x = UpdateStatusReq{}
	mi := &file_review_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusReq) ProtoMessage() {}

func (x *UpdateStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateStatusReq) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateStatusReq) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

func (x *UpdateStatusReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateStatusReq) GetOpReason() string {
	if x != nil {
		return x.OpReason
	}
	return ""
}

type UpdateStatusResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReviewId      uint64                 `protobuf:"varint,1,opt,name=ReviewId,proto3" json:"ReviewId,omitempty"`
	Status        uint32                 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStatusResp) Reset() {
	*x = UpdateStatusResp{}
	mi := &file_review_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusResp) ProtoMessage() {}

func (x *UpdateStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateStatusResp) Descriptor() ([]byte, []int) {
	return file_review_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateStatusResp) GetReviewId() uint64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

func (x *UpdateStatusResp) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_review_proto protoreflect.FileDescriptor

var file_review_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0xe6, 0x02, 0x0a, 0x0a, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x6b, 0x75, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x6b, 0x75, 0x12, 0x24, 0x0a, 0x05, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a,
	0x08, 0x48, 0x61, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x48, 0x61, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x43, 0x44, 0x4e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x43, 0x44, 0x4e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x49, 0x73,
	0x44, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x22, 0x86, 0x02, 0x0a, 0x10,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x6b, 0x75, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x6b, 0x75, 0x12, 0x24, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08,
	0x48, 0x61, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x48, 0x61, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x44, 0x4e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x44, 0x4e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x22, 0x47, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x22, 0x0a,
	0x0e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x69,
	0x64, 0x22, 0x37, 0x0a, 0x0f, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x55, 0x69, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x3d, 0x0a, 0x0f, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x53, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x6b, 0x75, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x6b, 0x75, 0x22, 0x38, 0x0a, 0x10, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x42, 0x79, 0x53, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a,
	0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x31, 0x0a, 0x13, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x14, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x42, 0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x61, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x70, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x47, 0x0a,
	0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0a, 0x0a, 0x06, 0x55,
	0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x6f, 0x6f, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x10, 0x03, 0x32, 0xbb, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x12, 0x3c, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x36, 0x0a, 0x0b, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x55, 0x69, 0x64, 0x12, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79,
	0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x42, 0x79, 0x53, 0x53, 0x6b, 0x75, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x42, 0x79, 0x53, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x53, 0x53, 0x6b, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x42, 0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x79, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_review_proto_rawDescOnce sync.Once
	file_review_proto_rawDescData = file_review_proto_rawDesc
)

func file_review_proto_rawDescGZIP() []byte {
	file_review_proto_rawDescOnce.Do(func() {
		file_review_proto_rawDescData = protoimpl.X.CompressGZIP(file_review_proto_rawDescData)
	})
	return file_review_proto_rawDescData
}

var file_review_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_review_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_review_proto_goTypes = []any{
	(ScoreLevel)(0),              // 0: pb.ScoreLevel
	(*ReviewInfo)(nil),           // 1: pb.ReviewInfo
	(*ProposeReviewReq)(nil),     // 2: pb.ProposeReviewReq
	(*ProposeReviewResp)(nil),    // 3: pb.ProposeReviewResp
	(*ReviewByUidReq)(nil),       // 4: pb.ReviewByUidReq
	(*ReviewByUidResp)(nil),      // 5: pb.ReviewByUidResp
	(*ReviewBySSkuReq)(nil),      // 6: pb.ReviewBySSkuReq
	(*ReviewBySSkuResp)(nil),     // 7: pb.ReviewBySSkuResp
	(*ReviewByReviewIdReq)(nil),  // 8: pb.ReviewByReviewIdReq
	(*ReviewByReviewIdResp)(nil), // 9: pb.ReviewByReviewIdResp
	(*UpdateStatusReq)(nil),      // 10: pb.UpdateStatusReq
	(*UpdateStatusResp)(nil),     // 11: pb.UpdateStatusResp
}
var file_review_proto_depIdxs = []int32{
	0,  // 0: pb.ReviewInfo.Level:type_name -> pb.ScoreLevel
	0,  // 1: pb.ProposeReviewReq.Level:type_name -> pb.ScoreLevel
	1,  // 2: pb.ReviewByUidResp.Infos:type_name -> pb.ReviewInfo
	1,  // 3: pb.ReviewBySSkuResp.Infos:type_name -> pb.ReviewInfo
	1,  // 4: pb.ReviewByReviewIdResp.Info:type_name -> pb.ReviewInfo
	2,  // 5: pb.Review.ProposeReview:input_type -> pb.ProposeReviewReq
	4,  // 6: pb.Review.ReviewByUid:input_type -> pb.ReviewByUidReq
	6,  // 7: pb.Review.ReviewBySSku:input_type -> pb.ReviewBySSkuReq
	8,  // 8: pb.Review.ReviewByReviewId:input_type -> pb.ReviewByReviewIdReq
	10, // 9: pb.Review.UpdateStatus:input_type -> pb.UpdateStatusReq
	3,  // 10: pb.Review.ProposeReview:output_type -> pb.ProposeReviewResp
	5,  // 11: pb.Review.ReviewByUid:output_type -> pb.ReviewByUidResp
	7,  // 12: pb.Review.ReviewBySSku:output_type -> pb.ReviewBySSkuResp
	9,  // 13: pb.Review.ReviewByReviewId:output_type -> pb.ReviewByReviewIdResp
	11, // 14: pb.Review.UpdateStatus:output_type -> pb.UpdateStatusResp
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_review_proto_init() }
func file_review_proto_init() {
	if File_review_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_review_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_review_proto_goTypes,
		DependencyIndexes: file_review_proto_depIdxs,
		EnumInfos:         file_review_proto_enumTypes,
		MessageInfos:      file_review_proto_msgTypes,
	}.Build()
	File_review_proto = out.File
	file_review_proto_rawDesc = nil
	file_review_proto_goTypes = nil
	file_review_proto_depIdxs = nil
}
